apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

version = '1.0'
group = 'com.sunway'
description = "interface"

compileJava {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    //jcenter()
    flatDir { dirs "/lib" }
    maven {
    	url "http://maven.oschina.net/content/groups/public"
    }
    //mavenCentral()
}

ext {
	springVersion = '4.2.4.RELEASE'
	springWSVersion = '2.2.4.RELEASE'
	mybatisVersion = '3.3.0'
	cxfVersion = '3.0.6'	// 3.1 以上需要 jdk1.7
	quartzVersion = '2.2.2'
}


def springLibraries = ["org.springframework:spring-core:$springVersion",
			"org.springframework:spring-beans:$springVersion",
			"org.springframework:spring-context:$springVersion",
			"org.springframework:spring-context-support:$springVersion",
    		"org.springframework:spring-aop:$springVersion", 
    		"org.springframework:spring-tx:$springVersion",
    		"org.springframework:spring-jdbc:$springVersion",
    		"org.springframework:spring-webmvc:$springVersion",
          	"org.aspectj:aspectjweaver:1.8.8"
]

def springWSLibraries = ["org.springframework.ws:spring-ws-core:$springWSVersion",
			"org.springframework.ws:spring-ws-security:$springWSVersion",
			"org.springframework.ws:spring-ws-support:$springWSVersion",
			"wsdl4j:wsdl4j:1.6.3"
			//"org.jvnet.jax-ws-commons.spring:jaxws-spring:1.9"
] 

def mybatisLibraries = ["org.mybatis:mybatis:$mybatisVersion",
    		"org.mybatis:mybatis-spring:1.2.3" 
]

def loggerLibraries = ["org.apache.logging.log4j:log4j-core:2.3",	// 2.4 以上需要 JDK1.7
			"org.apache.logging.log4j:log4j-api:2.3"
]

def quartzLibraries = ["org.quartz-scheduler:quartz:$quartzVersion",
			"org.quartz-scheduler:quartz-jobs:$quartzVersion"
]

def cxfLibraries = ["org.apache.cxf:cxf-core:$cxfVersion",
			"org.apache.cxf:cxf-rt-bindings-soap:$cxfVersion",
			"org.apache.cxf:cxf-rt-bindings-xml:$cxfVersion",
			"org.apache.cxf:cxf-rt-frontend-simple:$cxfVersion",
			"org.apache.cxf:cxf-rt-frontend-jaxrs:$cxfVersion",
			"org.apache.cxf:cxf-rt-frontend-jaxws:$cxfVersion",
			"org.apache.cxf:cxf-rt-security:$cxfVersion",
			//"org.apache.cxf:cxf-rt-ws-security:$cxfVersion",
			"org.apache.cxf:cxf-rt-wsdl:$cxfVersion"
]

configurations {
    //compile.exclude module: 'commons'
    all*.exclude group: 'com.sun.xml.bind', module: 'jaxb-impl'
    all*.exclude group: 'javax.xml.bind', module: 'jaxb-api'
    all*.exclude group: 'org.opensaml', module: 'xmltooling'
    all*.exclude module: 'stax-api'
}

dependencies {
	compile "org.apache.commons:commons-lang3:3.4",
			"org.apache.commons:commons-io:1.3.2",
			"commons-beanutils:commons-beanutils:1.9.2"
			
	//compile "com.google.guava:guava:19.0"
	
	compile "javax.persistence:persistence-api:1.0.2",
			"javax.servlet:javax.servlet-api:3.0.1",
			"com.google.code.gson:gson:2.6.2",
			"net.sf.ehcache:ehcache:2.10.1" 
			
	compile ("dom4j:dom4j:1.6.1"){exclude group: 'xml-apis', module: 'xml-apis'}
			
	compile loggerLibraries
    compile springLibraries  
    //compile springWSLibraries  		
    compile mybatisLibraries 
    compile cxfLibraries 
    compile quartzLibraries

    testCompile 'junit:junit:4.12',
    			"org.springframework:spring-test:$springVersion",
    			"oracle:ojdbc6:4.0"
    			//"org.springframework.ws:spring-ws-test:$springWSVersion"
}

task copyJars(type: Copy) {
  from configurations.runtime
  into '/lib' 
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

//eclipse {
//    jdt {
//        javaRuntimeName = "jdk1.8.0_60"
//    }
//}


