<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd  
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">
	
	<task:annotation-driven/> 
	
	<bean id="quartzJobFactory" class="com.sunway.ws.core.quartz.MyJobFactory">
	    <property name="ignoredUnknownProperties" value="applicationContext"/>
	</bean>
	
    <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        
        <property name="quartzProperties">
	        <props>
	            <prop key="org.quartz.scheduler.instanceName">PPMSscheduler</prop>
	            <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
	            <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
	            <!-- 线程池配置 -->
	            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
	            <prop key="org.quartz.threadPool.threadCount">10</prop>
	            <prop key="org.quartz.threadPool.threadPriority">5</prop>
	            <!-- JobStore 配置 -->
	            <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
	
	            <!-- 集群配置 -->
	            <!-- 通知Scheduler实例要它参与到一个集群当中 -->
	            <prop key="org.quartz.jobStore.isClustered">true</prop>
	            <!-- 定义了Scheduler实例检入到数据库中的频率(单位：毫秒)。
	            	Scheduler检查是否其他的实例到了它们应当检入的时候未检入；
	            	这能指出一个失败的Scheduler实例，且当前 Scheduler会以此来接管任何执行失败并可恢复的Job。
	            	通过检入操作，Scheduler 也会更新自身的状态记录。
	            	clusterChedkinInterval越小，Scheduler节点检查失败的Scheduler实例就越频繁。
	            	默认值是 15000 (即15 秒)。 -->
	            <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
	            <prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">1</prop>
	
				<!-- 当前时间超过已安排时间多久的作业不执行
					  要保证执行次数，值设大一些，避免过多交替执行同一个作业就设置小一些 -->
	            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	
	            <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
	        </props>
	    </property>
	    
	    <property name="schedulerName" value="PPMSscheduler" />
        
        <!-- QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->
    	<property name="startupDelay" value="30" />
    	
    	<property name="applicationContextSchedulerContextKey" value="applicationContextKey" />
    	
    	<!-- QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
    	<property name="overwriteExistingJobs" value="true" />
    	
    	<!-- 设置自动启动 -->
    	<property name="autoStartup" value="true" />
    	
    	<property name="jobFactory" ref="quartzJobFactory"/>
    
    	<!-- 注册jobDetail -->
        <property name="jobDetails">  
            <list>  
                <ref bean="erpCghtJob"/>   
                <ref bean="erpCkdJob"/>  
                <ref bean="erpRkdJob"/> 
                <ref bean="erpLcbJob"/>
                <ref bean="erpKjxyJob"/> 
            </list>  
        </property>  
        
        <!-- 注册触发器 -->
        <property name="triggers">  
            <list>  
               <ref bean="erpCghtTrigger"/>   
               <ref bean="erpCkdTrigger"/>
               <ref bean="erpRkdTrigger"/>
               <ref bean="erpLcbTrigger"/>
               <ref bean="erpKjxyTrigger"/>
            </list>  
        </property>  
        
        <property name="schedulerListeners">
	        <list>
	            <ref bean="quartzSchedulerListener" />
	        </list>
	    </property> 
    </bean>
    
    <!-- MethodInvokingJobDetailFactoryBean 持久化处理时报无法序列化异常... 改为用 JobDetailFactoryBean
    <bean id="erptestJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="testJob"/>
	    <property name="targetMethod" value="execute"/>
	    concurrent设为false，多个job不会并发运行，第二个job将不会在第一个job完成之前开始,与注解功能相同
	    <property name="concurrent" value="false"/> 
    </bean> --> 
    
	<bean id="erpCghtJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="com.sunway.ws.module.erp.common.quartz.ErpCghtJob"/>
	    <property name="durability" value="true" /> 
	    <property name="name" value="erpCghtWebservice_job" />
	    <property name="group" value="erpCghtWebservice_job_group" />
	    <property name="description" value="ERP 采购合同推送" />
	</bean>
    <bean id="erpCghtTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="erpCghtJob"/>
	    <property name="name" value="erpCghtWebservice_trigger" />
	    <property name="group" value="erpCghtWebservice_trigger_group" />
	    <property name="description" value="ERP 采购合同推送" />
	    <property name="cronExpression" value="*/30 * * * * ?"/>
	</bean>
	
	<bean id="erpCkdJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="com.sunway.ws.module.erp.common.quartz.ErpCkdJob"/>
	    <property name="durability" value="true" /> 
	    <property name="name" value="erpCkdWebservice_job" />
	    <property name="group" value="erpCkdWebservice_job_group" />
	    <property name="description" value="ERP 出库单推送" />
	</bean>
    <bean id="erpCkdTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="erpCkdJob"/>
	    <property name="name" value="erpCkdWebservice_trigger" />
	    <property name="group" value="erpCkdWebservice_trigger_group" />
	    <property name="description" value="ERP 出库单推送" />
	    <property name="cronExpression" value="*/30 * * * * ?"/>
	</bean>
	
	<bean id="erpRkdJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="com.sunway.ws.module.erp.common.quartz.ErpRkdJob"/>
	    <property name="durability" value="true" /> 
	    <property name="name" value="erpRkdWebservice_job" />
	    <property name="group" value="erpRkdWebservice_job_group" />
	    <property name="description" value="ERP 入库单推送" />
	</bean>
    <bean id="erpRkdTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="erpRkdJob"/>
	    <property name="name" value="erpRkdWebservice_trigger" />
	    <property name="group" value="erpRkdWebservice_trigger_group" />
	    <property name="description" value="ERP 入库单推送" />
	    <property name="cronExpression" value="*/30 * * * * ?"/>
	</bean>
	
	<bean id="erpLcbJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="com.sunway.ws.module.erp.common.quartz.ErpLcbJob"/>
	    <property name="durability" value="true" /> 
	    <property name="name" value="erpLcbWebservice_job" />
	    <property name="group" value="erpLcbWebservice_job_group" />
	    <property name="description" value="ERP 里程碑推送" />
	</bean>
    <bean id="erpLcbTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="erpLcbJob"/>
	    <property name="name" value="erpLcbWebservice_trigger" />
	    <property name="group" value="erpLcbWebservice_trigger_group" />
	    <property name="description" value="ERP 里程碑推送" />
	    <property name="cronExpression" value="*/30 * * * * ?"/>
	</bean>
	
	<bean id="erpKjxyJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="com.sunway.ws.module.erp.common.quartz.ErpKjxyJob"/>
	    <property name="durability" value="true" /> 
	    <property name="name" value="erpKjxyWebservice_job" />
	    <property name="group" value="erpKjxyWebservice_job_group" />
	    <property name="description" value="ERP 框架协议推送" />
	</bean>
    <bean id="erpKjxyTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="erpKjxyJob"/>
	    <property name="name" value="erpKjxyWebservice_trigger" />
	    <property name="group" value="erpKjxyWebservice_trigger_group" />
	    <property name="description" value="ERP 框架协议推送" />
	    <property name="cronExpression" value="*/30 * * * * ?"/>
	</bean>
    
</beans>