<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">
	
	<!-- 配置文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties" />
	
	<context:component-scan base-package="com.sunway.ws" />
	
	<context:annotation-config />
	<mvc:annotation-driven/>  
	
	<!-- 事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<jee:jndi-lookup id="dataSource" jndi-name="com.sunwayworld.srmDSN" />    
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@10.113.0.21:1521:ppms" />
		<property name="username" value="ppms_test" />
		<property name="password" value="ppms" />
	</bean>  
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- aop -->
	<aop:aspectj-autoproxy />
	
	<!-- MyBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.sunway.ws" />
		<property name="mapperLocations" value="classpath*:/mappings/**/*.xml" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- mybatis test 
	<bean id="testMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">    
		<property name="mapperInterface" value="com.sunway.ws.test.MyBatisTest" />   
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</bean>  -->
	
	<!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.sunway.ws"/>
        <property name="annotationClass" value="com.sunway.ws.core.persistence.annotation.MyBatisDao"/>
    </bean>
    
    <!-- 定义事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- cache -->
	<bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheCacheManager" 
          p:cache-manager-ref="ehcache"/>

	<!-- EhCache library setup -->
	<bean id="ehcache"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
          p:config-location="classpath:ehcache.xml"/>
</beans>